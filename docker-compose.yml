version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-ayatest}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  nats:
    image: nats:2.9-alpine
    ports:
      - "${NATS_PORT:-4222}:4222"
      - "8222:8222"
    command: "--jetstream --http_port 8222"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 5s
      timeout: 5s
      retries: 5

  temporal:
    image: temporalio/auto-setup:1.20.0
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PWD=${DB_PASSWORD:-postgres}
      - POSTGRES_SEEDS=postgres
      - DYNAMIC_CONFIG_FILE_PATH=/etc/temporal/config/dynamicconfig/development.yaml
    ports:
      - "${TEMPORAL_PORT:-7233}:7233"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./configs/temporal:/etc/temporal/config/dynamicconfig

  temporal-ui:
    image: temporalio/ui:2.10.3
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    ports:
      - "${TEMPORAL_UI_PORT:-8081}:8080"
    depends_on:
      - temporal

  backend:
    build:
      context: ./internal
      dockerfile: ../docker/backend.Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-ayatest}
      - NATS_URL=nats://nats:4222
      - TEMPORAL_URL=temporal:7233
      - PORT=8080
      - JWT_SECRET=${JWT_SECRET:-default_jwt_secret_change_in_production}
    ports:
      - "${BACKEND_PORT:-8082}:8080"
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
      temporal:
        condition: service_started
    volumes:
      - ./internal:/app
      - go_modules:/go/pkg/mod

  seed:
    build:
      context: ./internal
      dockerfile: ../docker/seed.Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-ayatest}
    depends_on:
      postgres:
        condition: service_healthy
      backend:
        condition: service_started
    volumes:
      - ./internal:/app
      - go_modules:/go/pkg/mod

  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend.Dockerfile
    environment:
      - VITE_API_URL=http://localhost:${BACKEND_PORT:-8082}/query
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    depends_on:
      - backend

volumes:
  postgres_data:
  go_modules:
  node_modules: 